1) create a folder
2) 
npm install hardhat
npm install @nomiclabs/hardhat-waffle 
npm install @nomiclabs/hardhat-ethers
npm install ethers
npm install ethereum-waffle
npm install dotenv
npm install @openzeppelin/contracts

3) npx hardhat
4) Add your contract to Contracts folder:
//SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.8.7;
import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol";
contract GoatToken is ERC20 {
    constructor() ERC20("GoatToken", "GOAT"){
        _mint(msg.sender, 5000*10**18);
    }
}

5) 
6) Go to Alchemy, create an app, click view key and copy https endpoint
7) Create an ".env" file at the root
PRIVATE_KEY="......"
8) Create an .gitignore file
add: "node_modules" and ".env" (without quotes)

9) Go to hardhat.config.js and add this to the beginning of the file
require("dotenv").config();

10) go to hardhat.config.js and add this to module exports section
module.exports = {
  solidity: "0.8.4",
  networks: {
    mumbai: {
      url: "SOME LINK I NEED HERE",
      accounts: [`0x${process.env.PRIVATE_KEY}`]
    }
  }
};

11) Make sure solidity version is compatible with contract solidity version. 
12) Rename scripts/sample-script.js to "deploy.js"
and change async main function to this:

async function main() {
  const GoatToken = await hre.ethers.getContractFactory("GoatToken");
  const goatToken = await GoatToken.deploy();
  await goatToken.deployed();
  console.log("Token deployed to:", goatToken.address);
}

Be careful about the capital and small letters. Your smart contract file name and contract name should be capital and 
match the first variable. 

13) npx hardhat compile

14) npx hardhat run ./scripts/deploy.js --network goerli
